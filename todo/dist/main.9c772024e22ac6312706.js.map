{"version":3,"file":"main.9c772024e22ac6312706.js","mappings":"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","sources":["webpack://todo/./src/styles/styles.css?46f1","webpack://todo/./src/views/ProjectView.js","webpack://todo/./src/models/ProjectList.js","webpack://todo/./src/views/TodoView.js","webpack://todo/./src/models/TodoModel.js","webpack://todo/./src/models/Storage.js","webpack://todo/./src/models/ProjectModel.js","webpack://todo/./src/styles/styles.css?9ead","webpack://todo/./src/index.js","webpack://todo/./src/controllers/ProjectController.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/styles.css\"],\"names\":[],\"mappings\":\"AAAA;QACS,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export class ProjectView {\n    constructor(){\n        this.projectForm = document.querySelector('#add-project-form');\n        this.projectDiv = document.querySelector('#project-div');\n        this.input = document.querySelector('#project-name-field');\n        this.deleteButtons = this.projectDiv.querySelectorAll('button');\n        this.projectName = document.querySelector('#project-name');\n    }\n\n    bindAddProject(handler){\n        this.projectForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n            if(this.input.value.trim()){\n                handler(this.input.value);\n                this.input.value = \"\";\n            }            \n        })\n    }\n\n    bindRemoveProject(handler){\n        this.deleteButtons = this.projectDiv.querySelectorAll('button');\n        this.deleteButtons.forEach((button) => {\n            button.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const id = button.closest('.project-item').dataset.id;\n                handler(id);\n            })\n            \n        })\n    }\n    \n    bindSelectProject(handler){\n        const projectsContainer = this.projectDiv.querySelectorAll('.project-item');\n        projectsContainer.forEach((project) => {\n            project.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const id = project.dataset.id;\n                projectsContainer.forEach(project => project.classList.remove('active'));\n                handler(id);\n            })\n        })\n    }\n\n    changeProjectName(name){\n        this.projectName.innerText = name;\n    }\n\n    displayProjects(projects, activeProject) {\n        this.projectDiv.innerHTML = \"\";\n        projects.forEach(project => {\n            const div = document.createElement(\"div\");\n            div.innerText = project.title;\n            div.dataset.id = project.id;\n            div.classList.add('p1');\n            div.classList.add('project-item')\n            \n            const deleteBtn = document.createElement(\"button\");\n            deleteBtn.textContent = \"Delete\";\n            div.append(deleteBtn);\n\n            if(activeProject != null && project.id === activeProject.id){\n                div.classList.add('active');\n            }\n            div.dataset.isActive = (activeProject != null && project.id === activeProject.id)\n\n            this.projectDiv.appendChild(div);\n        });\n    }\n}","import { ProjectModel } from \"./ProjectModel.js\";\n\nexport class ProjectList {\n    constructor() {\n        this.projects = [];\n        this.activeProject = null;\n    };\n\n    addProject(project) {\n        this.projects.push(project);\n    };\n\n    removeProject(id) {\n        this.projects = this.projects.filter(\n            project => project.id !== id\n        );\n    };\n\n    setActiveProject(id) {\n        this.activeProject = this.projects.find(\n            project => project.id === id\n        )\n    }\n\n    getActiveProject() {\n        return this.activeProject;\n    }\n\n    getProjects() {\n        return this.projects;\n    };\n\n    getProject(id) {\n        this.projects.filter(\n            project => project.id == id\n        );\n    };\n}","import { formatDistance, subDays } from 'date-fns';\n\nexport class TodoView {\n    // Handles The Todo of an Active PRoject\n    constructor(){\n        // Instansiate UI components of Todo\n        this.todoList = document.querySelector('#todo-list');\n        this.addButton = document.querySelector('#add-todo');\n        this.form = document.querySelector('#todo-form');\n        this.modal = document.querySelector('#todo-dialog');\n        this.submitBtn = document.querySelector('#submit-btn');\n        this.cancelBtn = this.modal.querySelector('#cancel-btn');\n        this.#setUpModal();\n    }\n\n    #setUpModal() {\n        this.addButton.addEventListener('click', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            // Show Modal\n            this.modal.showModal();\n        })\n\n        this.submitBtn.addEventListener('click', (e) => {\n            return;\n        })\n\n        this.cancelBtn.addEventListener('click', (e) => {\n            this.form.reset();\n            this.modal.close();\n        })\n    }\n\n    bindAddTodo(handler){\n        this.form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            handler(new FormData(this.form));\n            this.form.reset();\n            this.modal.close();\n        })\n    }\n\n    bindToggleTodo(handler){\n        const todoItems = this.todoList.querySelectorAll('.todo-item');\n        todoItems.forEach((item) => {\n            item.addEventListener('click', (e) => {\n                handler(item.dataset.id)\n                if (e.target.tagName.toLowerCase() === 'input') return;\n            })\n        })\n    }\n    \n    displayTodos(todos) {\n        this.todoList.innerHTML = '';\n        todos.forEach((todo) => {\n            this.#createTodoItem(todo);\n            this.#statusStyler(todo);\n        })\n    }\n\n    #statusStyler(todo){\n        const todoDiv = document.querySelector(`.todo-item[data-id=\"${todo.getId()}\"]`)\n        const checkbox = todoDiv.querySelector('input[type=\"checkbox\"]')\n        if(todo.getIsFinish()) {\n            todoDiv.classList.add('finished');\n            checkbox.checked = true;\n        }\n        else{\n            todoDiv.classList.remove('finished');\n            checkbox.checked = false;\n        }\n    }\n\n    #createTodoItem(todo) {\n        // Todo Component\n        const div = document.createElement('div');\n        div.classList.add('todo-item');\n        div.dataset.id = todo.getId();\n        this.todoList.appendChild(div);\n        \n        // CheckBox\n        const checkboxDiv = document.createElement('div');\n        div.appendChild(checkboxDiv);\n        const checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkboxDiv.appendChild(checkbox);\n        \n        // Todo Contents\n        const propertiesDiv = document.createElement('div');\n        div.appendChild(propertiesDiv);\n        \n        const nameDiv = document.createElement('div'); \n        propertiesDiv.appendChild(nameDiv);\n        nameDiv.classList.add('p1');\n        nameDiv.textContent = todo.title;\n\n        const descriptionDiv = document.createElement('div'); \n        propertiesDiv.appendChild(descriptionDiv);\n        descriptionDiv.classList.add('p2');\n        descriptionDiv.textContent = todo.description;\n\n        const priorityDiv = document.createElement('div'); \n        propertiesDiv.appendChild(priorityDiv);\n        priorityDiv.classList.add('p2');\n        priorityDiv.textContent = `Priority: ${todo.priority}`;\n\n        const dueDiv = document.createElement('div');\n        propertiesDiv.appendChild(dueDiv);\n        dueDiv.classList.add('p2');\n        dueDiv.textContent = formatDistance(todo.dueDate, new Date, { addSuffix: true })\n    }\n}","export class TodoModel{\n    constructor(title, description, dueDate, priority, isFinish=false){\n        this.id = crypto.randomUUID();\n        this.title = title;\n        this.description = description;\n        this.dueDate = dueDate;\n        this.priority = priority;\n        this.isFinish = isFinish;\n    }\n    set title(value){\n        this._title = value;\n    }\n    get title(){\n        return this._title;\n    }\n    set description(value){\n        this._description = value;\n    }\n    get description(){\n        return this._description;\n    }\n    set dueDate(value){\n        this._dueDate = value;\n    }\n    get dueDate(){\n        return this._dueDate;\n    }\n    set priority(value){\n        this._priority = value;\n    }\n    get priority(){\n        return this._priority;\n    }\n    toggleStatus(){\n        this.isFinish = !this.isFinish;\n    }\n    getIsFinish(){\n        return this.isFinish;\n    }\n    getId(){\n        return this.id;\n    }\n}","const Storage = (() => {\n    const save = (projectList) => {\n        localStorage.setItem(\n            \"todoApp\",\n            JSON.stringify(projectList)\n        );\n    }\n\n    const load = () => {\n        const data = localStorage.getItem(\"todoApp\");\n        return data ? JSON.parse(data) : null;\n    }\n    \n    return {save, load};\n})();\n\nexport default Storage;","export class ProjectModel {\n    todos = [];\n    constructor(title) {\n        this.id = crypto.randomUUID();\n        this.title = title;\n    }\n    set todo(value) {\n        this.todos.push(value);\n    }\n    get todo() {\n        return this.todos;\n    }\n    set title(value) {\n        this._title = value;\n    }\n    get title() {\n        return this._title;\n    }\n    getId(){\n        return this.id;\n    }\n}","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ProjectController } from './controllers/ProjectController';\nimport './styles/styles.css';\n\n// const projectList = [];\n\n// let project = new Project(\"Home\");\n// project.todo = new ToDo('Clean Kitchen', 'Wash the dishes', new Date(\"09/28/2025\"), 'medium')\n// project.todo = new ToDo('Buy Groceries', 'Go to Robinsons', new Date(\"09/28/2025\"), 'medium')\n// projectList.push(project);\n// console.log(projectList)\n\nnew ProjectController();\n","import { ProjectView } from \"../views/ProjectView\";\nimport { ProjectList } from \"../models/ProjectList\";\nimport { TodoView } from \"../views/TodoView\";\nimport { TodoModel } from \"../models/TodoModel\";\nimport Storage from \"../models/Storage\";\nimport { ProjectModel } from \"../models/ProjectModel\";\n\nexport class ProjectController {\n    constructor() {\n        this.ProjectListModel = this.loadFromStorage() || new ProjectList();\n        if (!this.ProjectListModel.getProjects().length) {\n            this.ProjectListModel.addProject(new ProjectModel(\"Default\"));\n        };\n        this.ProjectListModel.setActiveProject(\n            this.ProjectListModel.getProjects()[0].getId()\n        );\n        // Set Up Views\n        this.ProjectView = new ProjectView();\n        this.TodoView = new TodoView();\n\n        // Bind Events\n        this.ProjectView.bindAddProject(this.handleAddProject);\n        this.TodoView.bindAddTodo(this.handleAddTodo);\n        this.updateView();\n    }\n\n    handleAddProject = (title) => {\n        // Add Project to Project \n        this.ProjectListModel.addProject(new ProjectModel(title));\n        this.saveToStorage();\n        this.updateView();\n    }\n\n    handleRemoveProject = (id) => {\n        this.ProjectListModel.removeProject(id);\n        this.saveToStorage();\n        this.updateView();\n    }\n\n    handleSelectProject = (id) => {\n        this.ProjectListModel.setActiveProject(id);\n        // update TodoView\n        this.updateView();\n    }\n\n    handleAddTodo = (formData) => {\n        const title = formData.get('title');\n        const description = formData.get('description');\n        const priority = formData.get('priority');\n        const dueDate = new Date(formData.get('dueDate'));\n        \n        this.ProjectListModel.getActiveProject().todo = new TodoModel(\n            title, description, dueDate, priority\n        );\n        this.saveToStorage();\n        \n        this.updateView();\n    }\n\n    handleToggleTodo = (id) => {\n        const todo = this.ProjectListModel\n            .getActiveProject().todo.find(\n                item => item.id == id\n        );\n        todo.toggleStatus();\n        this.saveToStorage();\n        this.updateView();\n    }\n\n    updateView(){\n        // View Update\n        this.ProjectView.displayProjects(this.ProjectListModel.getProjects(), this.ProjectListModel.getActiveProject());\n        this.ProjectView.changeProjectName(this.ProjectListModel.getActiveProject().title);\n        \n        // Add Bindings\n        this.ProjectView.bindRemoveProject(this.handleRemoveProject);\n        this.ProjectView.bindSelectProject(this.handleSelectProject);   \n\n        // Only View Selected Project\n        if(this.ProjectListModel.getActiveProject() != null){\n            this.TodoView.displayTodos(this.ProjectListModel.getActiveProject().todo);\n        }\n        this.TodoView.bindToggleTodo(this.handleToggleTodo);\n    }\n\n    saveToStorage() {\n        Storage.save(this.ProjectListModel);\n    }\n\n    loadFromStorage() {\n        const data = Storage.load(\"todoApp\");\n        if (!data) return null;\n        const projectList = new ProjectList();\n\n        // Rebuild Projects\n        data.projects.forEach((p) => {\n            const project = new ProjectModel(p._title);\n\n            p.todos.forEach((t) => {\n                const todo = new TodoModel(\n                    t._title,\n                    t._description,\n                    new Date(t._dueDate),\n                    t._priority,\n                    t.isFinish\n                );\n                project.todo = todo;\n            })\n            projectList.addProject(project);\n        })\n\n        return projectList;\n    }\n}"],"names":["___CSS_LOADER_EXPORT___","push","module","id","ProjectView","constructor","this","projectForm","document","querySelector","projectDiv","input","deleteButtons","querySelectorAll","projectName","bindAddProject","handler","addEventListener","e","preventDefault","value","trim","bindRemoveProject","forEach","button","stopPropagation","closest","dataset","bindSelectProject","projectsContainer","project","classList","remove","changeProjectName","name","innerText","displayProjects","projects","activeProject","innerHTML","div","createElement","title","add","deleteBtn","textContent","append","isActive","appendChild","ProjectList","addProject","removeProject","filter","setActiveProject","find","getActiveProject","getProjects","getProject","TodoView","todoList","addButton","form","modal","submitBtn","cancelBtn","showModal","reset","close","bindAddTodo","FormData","bindToggleTodo","item","target","tagName","toLowerCase","displayTodos","todos","todo","todoDiv","getId","checkbox","getIsFinish","checked","checkboxDiv","type","propertiesDiv","nameDiv","descriptionDiv","description","priorityDiv","priority","dueDiv","formatDistance","dueDate","Date","addSuffix","TodoModel","isFinish","crypto","randomUUID","_title","_description","_dueDate","_priority","toggleStatus","projectList","localStorage","setItem","JSON","stringify","load","data","getItem","parse","ProjectModel","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","ProjectListModel","loadFromStorage","length","handleAddProject","handleAddTodo","updateView","saveToStorage","handleRemoveProject","handleSelectProject","formData","get","handleToggleTodo","Storage","p","t"],"sourceRoot":""}